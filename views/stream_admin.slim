div.container
  section#status
    h2
      | stream admin

    div.row
      div.span12#connections
        h3
          | open streams&nbsp;
          small
            strong.num N
            | &nbsp;open stream(s)
        table.table.table-striped
          thead
            tr
              th request_path
              th client
              th tag
              th age
              th node
          tbody

    button.btn.btn-small#refreshbtn
      li.icon-refresh
      | &nbsp;force refresh

script#entry-template type='text/x-handlebars-template'
  tr
    td
      code.new
        | {{request_path}}
    td
      i class="{{icon}}" title="{{user_agent}}"
      tt
        | &nbsp;{{remote_ip}}
    td
      | {{{tag}}}
    td
      span.badge
        i.icon-time
        | &nbsp;{{age}}
    td
      span.badge.badge-success
        | {{node}}


javascript:
  if (!String.fromCodePoint) {
    /*!
     * ES6 Unicode Shims 0.1
     * (c) 2012 Steven Levithan <http://slevithan.com/>
     * MIT License
     **/
    String.fromCodePoint = function fromCodePoint () {
      var chars = [], point, offset, units, i;
      for (i = 0; i < arguments.length; ++i) {
        point = arguments[i];
        offset = point - 0x10000;
        units = point > 0xFFFF ? [0xD800 + (offset >> 10), 0xDC00 + (offset & 0x3FF)] : [point];
        chars.push(String.fromCharCode.apply(null, units));
      }
      return chars.join("");
    }
  }

coffee:
  pickPlatformIcon = (agent) ->
    return "globe" if !agent?
    return "apple" if agent.match(/Macintosh/)
    return "mobile-phone" if agent.match(/iPhone/)
    return "tablet" if agent.match(/iPad/)
    return "linux" if agent.match(/Linux/)
    return "windows" if agent.match(/Windows/)
    return "android" if agent.match(/Android/)
    "globe"

  tagRender = (tag) ->
    return "-" if tag == null
    emoji_char = String.fromCodePoint parseInt(tag, 16)
    "<span class='label label-info'>#{emoji_char} #{tag}</span>"

  # quick hack to get the "tag" -- what we used on the original streamer to
  # identify conns from the new 'namespace' field.  since this is just for
  # reverse compatibility, don't bother to do this in a robust way, just handle
  # the one known legacy case.
  tagFromNamespace = (namespace) ->
    fields = namespace.split('/')
    return null unless fields[1] is "details"
    fields[2]

  renderMultiData = (response) ->
    emptyAllTables()
    renderData(node) for node in response

  renderData = (response) ->
    renderDataTable(response.connections, 'connections', response.node)

  emptyAllTables = () ->
    $('tbody').empty()

  prettyAge = (age) ->
    return "#{age}s" if age < 60
    return "#{parseInt(age/60)}m" if age < 60*120
    "#{parseInt(age/(60*60))}h"

  renderDataTable = (response, id, node) ->
    id_selector = $("##{id}")
    tbody_selector = id_selector.find('tbody')
    for client in response
      context = {
        request_path: client.request_path
        remote_ip: client.client_ip
        user_agent: client.user_agent
        icon: "icon-" + pickPlatformIcon(client.user_agent)
        tag: emoji.replace_unified tagRender( tagFromNamespace(client.namespace) )
        age: prettyAge( Math.floor(Date.now() / 1000) - client.created_at )
        node: node
      }
      rendered_entry = Handlebars.templates.entry(context)
      tbody_selector.append(rendered_entry)

    id_selector.find('.num').text tbody_selector.find('tr').length

  @refreshData = ->
    $.get("https://api.emojitracker.com/admin/streamers/status.json", (response) ->
      renderMultiData(response)
    , "json")

  @Handlebars.templates = {}
  $ ->
    Handlebars.templates.entry = Handlebars.compile $('#entry-template').html()

    $('#refreshbtn').click -> refreshData()
    setInterval refreshData, 10000
    refreshData()
